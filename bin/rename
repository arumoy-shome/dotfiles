#!/usr/bin/env python3
# vim: sw=4

import argparse
import os
import re


with open(
    os.path.join(os.getenv("HOME"), ".local/share/rename", "stopwords-en.txt")
) as f:
    STOPWORDS = f.readlines()
    STOPWORDS = [word.strip("\n") for word in STOPWORDS]


def rename(src: str) -> str:
    dst = src
    dst = dst.lower()
    dst = re.sub(r"\s+", "-", dst)  # replace 1 or more whitespace with hyphen
    dst = re.sub(
        r"[^a-zA-Z0-9]+", "-", dst
    )  # replace 1 or more punctuations with hyphen
    dst = re.sub("([A-Z][a-z]+)", r"-\1", re.sub("([A-Z]+)", r"-\1", dst))
    dst = dst.split("-")
    dst = [word for word in dst if word]  # remove empty words
    dst = [word for word in dst if word not in STOPWORDS]
    return "-".join(dst)


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Rename files the way I like it.")
    parser.add_argument("source", type=str, help="File or directory to rename")
    parser.add_argument(
        "-f",
        "--force",
        action="store_true",
        default=False,
        help="Don't ask for confirmation",
    )

    args = parser.parse_args()

    head, tail = os.path.split(args.source)
    src, ext = os.path.splitext(tail)

    dst = rename(src)
    dst = os.path.join(head, dst)
    dst = f"{dst}{ext}"

    if not dst:
        print("rename: no more words left!")
        exit(1)

    if not args.force:
        response = input(f"rename: {args.source} --> {dst}? [y, n]: ")
        match response:
            case "n":
                print("rename: aborted by user.")
                exit(0)
            case _:
                print("rename: incorrect response, please type one of [y, n]")
                exit(1)

    print(f"rename: {args.source} --> {dst}")
    os.rename(src=args.source, dst=dst)
